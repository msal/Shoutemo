/*
 * Copyright 2013 Maximilian Salomon.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see http://www.gnu.org/licenses/.
 */

apply plugin: 'com.android.application'

dependencies {
    compile 'com.google.guava:guava:18.0'
    compile 'org.jsoup:jsoup:1.7.1'
    compile 'it.sephiroth.android.library.picasso:picasso:2.2.2.2'
    compile 'com.android.support:recyclerview-v7:21.0.0'
    compile "com.android.support:appcompat-v7:21.0.+"
    compile 'com.android.support:support-v4:21.0.0'
    compile 'pl.droidsonroids.gif:android-gif-drawable:1.0.9'
}

android {
    compileSdkVersion 21
    buildToolsVersion '21.1'

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 21
        versionCode 8
        versionName '1.3.3'
    }

    sourceSets {
        main {
            assets.srcDirs = ['src/assets']
            java.srcDirs = ['src/java']
            res.srcDirs = ['src/res']
            manifest.srcFile 'src/AndroidManifest.xml'
        }
    }

    signingConfigs {
        release {
            /* get the keystore data for signing */
            def Properties props = new Properties()
            def propFile = file('signing.properties')

            if (propFile.canRead()) {
                props.load(new FileInputStream(propFile))

                if (props != null
                        && props.containsKey('STORE_FILE')
                        && props.containsKey('STORE_PASSWORD')
                        && props.containsKey('KEY_ALIAS')
                        && props.containsKey('KEY_PASSWORD')) {
                    storeFile = file(props['STORE_FILE'])
                    storePassword = props['STORE_PASSWORD']
                    keyAlias = props['KEY_ALIAS']
                    keyPassword = props['KEY_PASSWORD']
                } else {
                    android.buildTypes.release.signingConfig = null
                }
            } else {
                android.buildTypes.release.signingConfig = null
            }
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            runProguard true
            proguardFile getDefaultProguardFile('proguard-android.txt')
            proguardFile 'proguard.txt'
            debuggable false
            zipAlign true
            jniDebugBuild false
        }
    }

    lintOptions {
         disable 'MissingTranslation'
    }
}

